---
title: "PLS 900 HW 3/22"
author: "Shane Wery"
date: "March 16, 2018"
output: html_document
---

```{r setup, include=FALSE}
knitr::opts_chunk$set(echo = TRUE)
```


```{r data}
library(readr)
approval_data <- read_csv("C:/Users/swery/Downloads/approval_polllist.csv")
```

```{r basic graph}
#use end date of poll
#get it into the right format
approval_data$date_vector <- as.Date(approval_data$enddate, "%m/%d/%Y")
#create day value 
approval_data$day <- c(1:length(approval_data$enddate))


#create variables for approve and disapprove means conditional on date
library(ggplot2)
library(magrittr)
library(locpol)
library(dplyr)
library(zoo)
library(scales)



approval_data <- approval_data %>%
  group_by(enddate) %>%
  mutate(
    approval_mean = mean(approve),
    disapproval_mean = mean(disapprove),
    q25_approval = quantile(approve, probs=0.25),
    q75_approval = quantile(approve, probs=.75),
    q25_disapproval = quantile(disapprove, probs=0.25),
    q75_disapproval = quantile(disapprove, probs=0.75)
)
approval_data$approve_rolling_mean <- rollmean(approval_data$approval_mean, 15, na.pad=TRUE)    
    
approval_data$disapprove_rolling_mean <- rollmean(approval_data$disapproval_mean,15, na.pad=TRUE)

test <- '4/03/2018'
dates <- as.Date(test, "%m/%d/%Y")
test1 <- '4/18/2018'
dates1 <- as.Date(test1, "%m/%d/%Y")
test2 <- '5/05/2018' 
dates2 <- as.Date(test2, "%m/%d/%Y")
test3 <- '5/09/2018'
dates3 <- as.Date(test3, "%m/%d/%Y")

ggplot(approval_data, aes(x=approval_data$date_vector)) +
  geom_point(aes(y=approve), color='forestgreen', alpha=.08) +
  geom_point(aes(y=disapprove), color='orange2', alpha= .08) +
  geom_line(aes(y=approve_rolling_mean), color='forestgreen') +
  geom_line(aes(y=disapprove_rolling_mean), color='orange2') +
  geom_text(aes(x= dates, y=55, label='54.0'), color='orange2', alpha=1) +
  geom_text(aes(x= dates, y=41.4, label='40.4'), color='forestgreen', alpha=1) +
  geom_text(aes(x= dates1, y=55.3, label= '%'), color='orange2', alpha=1, size=2) +
  geom_text(aes(x= dates1, y=41.7, label= '%'), color='forestgreen', alpha=1, size=2) +
  geom_text(aes(x= dates2, y=41.7, label= 'Approval'), color='black', alpha=1, size=2) +
  geom_text(aes(x= dates3, y=55.3, label= 'Disapproval'), color='black', alpha=1, size=2) +
  geom_hline(yintercept = 50) +
  geom_vline(aes(xintercept=as.numeric(approval_data$date_vector[3646])), linetype = 'dotted') +
  xlab('') +
  ylab('') +
  theme_bw() +
  theme(panel.border = element_blank()) +
  scale_x_date(labels = date_format(format = "%b %Y"), date_breaks = '2 months') 

```
```{r first gaph}

library(readxl)
Climate_Attitude <- read_excel("C:/Users/swery/Desktop/PLS 900/Graph Assignment Data/Climate Attitude.xlsx")
Iran_Attitude <- read_excel("C:/Users/swery/Desktop/PLS 900/Graph Assignment Data/Iran Policy Attitude.xlsx")
Immigration_Attitude <- read_excel("C:/Users/swery/Desktop/PLS 900/Graph Assignment Data/Muslim Ban Attitude.xlsx")
Trade_Attitude <- read_excel("C:/Users/swery/Desktop/PLS 900/Graph Assignment Data/Trade Policy Attitude.xlsx")
Wall_Attitude <- read_excel("C:/Users/swery/Desktop/PLS 900/Graph Assignment Data/Wall Attitude.xlsx")

#create a vector of region identifiers
#could have been done by merging the countrycode dataset, but this is easier

Region_vector <- as.vector(c('NorthAmerica',
                             rep('EaR', 11), 
                             rep('Asia', 6), 
                             rep('MEA', 11),
                             rep('SAM', 7)))

Figure1_Data <- cbind(Climate_Attitude$country,
                     Climate_Attitude$net_approval,
                     Iran_Attitude$net_approval,
                     Immigration_Attitude$net_approval,
                     Trade_Attitude$net_approval,
                     Wall_Attitude$net_approval,
                     Region_vector)



colnames(Figure1_Data) <- c('country',
                            'climate',
                            'Iran', 
                            'Immigration', 
                            'Trade', 
                            'Wall',
                            'Region')

#Drop Canada and Australia since we don't need it

Figure1_Data <- Figure1_Data[-c(1,13),]








```


#Load Data
```{r load data}

###set up model for simulation analysis
library(ggplot2)
library(foreign)

library(MASS)
library(ggplot2)
library(dplyr)
library(magrittr)
library(reshape2)

setwd("/Users/elizabethbrannon/Dropbox/Classwork/PLS 900")

Expends2002 <- read.delim("/Users/elizabethbrannon/Dropbox/Classwork/PLS 900/Expends2002.txt", sep = ",")
options(stringsAsFactors = FALSE)

delete.data <- read.csv("/Users/elizabethbrannon/Dropbox/Classwork/PLS 900/DeleteTheseExpcode.csv")

Dyad = load("/Users/elizabethbrannon/Dropbox/Classwork/PLS 900/Dyadicdata.RData")
Dyad.data <- as.data.frame(x)

EPR3 <- read.dta("/Users/elizabethbrannon/Dropbox/Classwork/PLS 900/EPR3CountryNewReduced.dta")

polity <- read.csv("polityiv.csv")

LJI <- read.csv("/Users/elizabethbrannon/Dropbox/Classwork/PLS 900/LJI.csv")


#merge variables


#First, I need to drop all observations that do not 
#include US in the dyad.
Dyad.data <- Dyad.data[Dyad.data$ccode1 == 2,]

#Then, I remove all variables from the dataset 
#that I don't want.
Dyad.data <- Dyad.data[,c('ccode2', 'year', 'absidealdiff')]

#Then, I move to the ethnic power data and isolate 
#the non-U.S. cases. 
EPR3 <- EPR3[EPR3$'cowcode' != 2,]

#Next, I clean up my EPR3 dataset to only include the 
#variables I am interested in. 
EPR3 <- EPR3[, c('cowcode', 'year', 'lmtnest', 'exclpop', 'ethfrac')]

#In order to merge the data, I need a variable that 
#will be common between the two datasets. For this, I create ccodeyear in both sets. 
Dyad.data$ccodeyear <- paste0(Dyad.data$ccode2, Dyad.data$year)
EPR3$ccodeyear <- paste0(EPR3$cowcode, EPR3$year)

#Next, I will merge these two datasets together. 
Dyad.data$lmtnest <- EPR3$lmtnest[match(Dyad.data$ccodeyear, EPR3$ccodeyear)]

Dyad.data$excelpop <- EPR3$exclpop[match(Dyad.data$ccodeyear, EPR3$ccodeyear)]

Dyad.data$ethfrac <- EPR3$ethfrac[match(Dyad.data$ccodeyear, EPR3$ccodeyear)]

#Then, I will work on my polity data. First, I need to clean up the 
#data by assigning similar variable names for the ccodeyear. 
#Next, I will create the binary variables for autoc and democ. 
#Finally, I will merge the cleaned polity data in the Dyad.data dataframe. 

#Rename cyear to ccodeyear
polity$ccodeyear <- polity$cyear

#Create new autoc and democ variables
polity$autoc <- ifelse(polity$polity2 <= -6, 1, 0)
polity$democ <- ifelse(polity$polity2 >= 6, 1, 1)

#Merge these new variables in
Dyad.data$autoc <- polity$autoc[match(Dyad.data$ccodeyear, polity$ccodeyear)]

Dyad.data$democ <- polity$democ[match(Dyad.data$ccodeyear, polity$ccodeyear)]

#Next, I will need to merge in the LJI data. 
#First, I will create a similar variable in LJI to 
#match on and then I will merge. 

#New variable to match on
LJI$ccodeyear <- paste0(LJI$ccode, LJI$year)

#Merge variables
Dyad.data$LJI <- LJI$LJI[match(Dyad.data$ccodeyear, LJI$ccodeyear)]

#Finally, I drop NAs.
Dyad.data <- na.omit(Dyad.data)

##folds

#Shuffle data so that folds are not systematically grouped
Dyad.data <- Dyad.data[sample(nrow(Dyad.data)),]

#Next, I need to create the folds.
folds <- cut(seq(1, nrow(Dyad.data)), breaks=30, labels=FALSE)

#Then, I need to create a space to store the folds, 
#once I begin evaluating the model. I will use fold.list 
#and omit.list to describe these lists. 

fold.list <- list()
omit.list <- list()

#Next, I will fill the lists with the actual folds. I will use 30 folds. 
for(i in 1:30){
  omits <- which(folds==i,arr.ind = TRUE)
  fold.data <- Dyad.data[omits, ]
  fold.list[[i]] <- fold.data
  omit.list[[i]] <- Dyad.data[-omits,]
}

##simulation 

model1 <-  lm(formula = absidealdiff ~ lmtnest + excelpop + ethfrac + democ + autoc + LJI, data = omit.list[[1]])
model1

betaMean = coef(model1)
betaDist = vcov(model1)
betaDraws = mvrnorm(n=1000, betaMean, betaDist, empirical = FALSE)



lmnestValues = seq(min(Dyad.data$lmnest), max(Dyad.data$lmnest), length.out=1000)
scenario = cbind( intercept=1, lmnest=lmnestValues,
  excelpop=mean(Dyad.data$excelpop), ethfrac=mean(Dyad.data$ethfrac), democ=median(Dyad.data$democ), autoc=median(Dyad.data$autoc), LJI=mean(Dyad.data$LJI) )

```
